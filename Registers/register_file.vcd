$date
	Mon Dec 30 15:40:09 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegFileTestBench $end
$var wire 32 ! readData2 [31:0] $end
$var wire 32 " readData1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ readReg1 [4:0] $end
$var reg 5 % readReg2 [4:0] $end
$var reg 1 & regWrite $end
$var reg 1 ' rst $end
$var reg 32 ( writeData [31:0] $end
$var reg 5 ) writeReg [4:0] $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 5 * readReg1 [4:0] $end
$var wire 5 + readReg2 [4:0] $end
$var wire 1 & regWrite $end
$var wire 1 ' rst $end
$var wire 32 , writeData [31:0] $end
$var wire 5 - writeReg [4:0] $end
$var wire 32 . readData2 [31:0] $end
$var wire 32 / readData1 [31:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
1'
0&
b0 %
b0 $
0#
b0 "
b0 !
$end
#5
b100000 0
1#
#10
0#
0'
#15
1#
#20
0#
b10100101101001011010010110100101 (
b10100101101001011010010110100101 ,
b1 )
b1 -
1&
#25
1#
#30
b10100101101001011010010110100101 "
b10100101101001011010010110100101 /
0#
b1 $
b1 *
0&
#35
1#
#40
0#
b10010001101000101011001111000 (
b10010001101000101011001111000 ,
b10 )
b10 -
1&
#45
1#
#50
b10010001101000101011001111000 "
b10010001101000101011001111000 /
0#
b10 $
b10 *
0&
#55
1#
#60
0#
